<%- include("../layout.ejs"); %>
<head>
 
  <style>
    .container {
      max-width: 600px;
      margin: auto;
    }
  
    .chat-box {
      border: 1px solid #ddd;
      max-height: 300px;
      overflow-y: auto;
      margin-bottom: 20px;
    }
  
    .messages {
      list-style: none;
      padding: 0;
    }
  
    .messages li {
      margin: 20px 0;
      position: relative;
    }
  
    .sent {
      text-align: right;
    }
  
    .received {
      text-align: left;
    }
  
    .message-content {
      display: inline-block;
      padding: 10px;
      border-radius: 5px;
      background-color: #f1f1f1;
      position: relative;
      max-width: 50%; /* Set max-width to 50% */
      word-wrap: break-word;
    }
  
    .receiver {
      font-size: 10px; /* Adjust the font size as needed */
      position: absolute;
      top: -20px;
      left: 5px;
      padding: 5px;
      display: inline-block;
    }
  
    .receiver-right {
      font-size: 10px; /* Adjust the font size as needed */
      position: absolute;
      top: -20px;
      left: 5px;
      padding: 5px;
      display: inline-block;
    }
    .sent .left-hr {
    margin-right: 5px; /* Adjust this margin as needed */
  }

  .received .right-hr {
    margin-left: 5px; /* Adjust this margin as needed */
  }

  .left-hr, .right-hr {
    position: absolute;
    bottom: 5px; /* Adjust the distance from the text */
    height: 1px; /* Set the height of the hr */
    background-color: #ccc; /* Set the color of the hr */
  }
    /* .right-hr {
      position: absolute;
      width: 80%;
      left: 100px;
    }
    .sent .left-hr {
  margin-right: 5px; /* Adjust this margin as needed */
/* } */

.received .right-hr {
  margin-left: 5px; /* Adjust this margin as needed */
}
    .left-hr {
      position: absolute;
      width: 80%;
      left: 5px;
      
    } */
  
    .timestamp {
      display: none;
      position: absolute;
      bottom: -20px;
      left: 5px;
      background-color: #fff;
      padding: 5px;
      border: 1px solid #ccc;
      font-size: 10px; /* Adjust the font size as needed */
    }
  
    .message-content:hover .timestamp {
      display: block;
    }
  
    .sender {
      font-weight: 450;
      font-size: 16px;
      margin-right: 5px;
    }
  
    .message-form {
      margin-top: 20px;
    }
  
    .form-group {
      margin-bottom: 15px;
    }
  
    .btn-primary {
      background-color: #4CAF50;
      color: white;
      border: none;
      padding: 10px 20px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
      border-radius: 5px;
    }
  </style>
  
</head>
 
 <body>
  <div class="container">
    <h1>Chat with <%= user.name %></h1>
    <script>function formatTimestamp(timestamp) {
      const date = new Date(timestamp);
      return `${date.getHours()}:${
        (date.getMinutes() < 10 ? "0" : "") + date.getMinutes()
      }`;
      document.addEventListener('DOMContentLoaded', function () {
    const chatBox = document.getElementById('chatBox');
    const hrElements = document.querySelectorAll('.left-hr, .right-hr');

    // Function to dynamically set the hr width based on the message length
    function adjustHrWidth() {
      hrElements.forEach(hr => {
        const messageContent = hr.nextElementSibling;
        const messageWidth = messageContent.clientWidth;
        hr.style.width = `${messageWidth}px`;
      });
    }

    // Check if the page is refreshed
    if (performance.navigation.type === 1) {
      chatBox.scrollTop = chatBox.scrollHeight;
    } else {
      chatBox.scrollTo({ top: chatBox.scrollHeight, behavior: 'smooth' });
    }

    // Adjust hr width on window resize
    window.addEventListener('resize', adjustHrWidth);
    
    // Initial adjustment
    adjustHrWidth();
  });
    }</script>
    <!-- Display existing messages -->
    <div class="chat-box" id="chatBox">
      <script>
         document.addEventListener('DOMContentLoaded', function () {
          const chatBox = document.getElementById('chatBox');
    
          // Check if the page is refreshed
          if (performance.navigation.type === 1) {
            chatBox.scrollTop = chatBox.scrollHeight;
          } else {
            chatBox.scrollTo({ top: chatBox.scrollHeight, behavior: 'auto' });
          }
        });
      </script>
      <ul class="messages">
        <% for (const sentMessage of sortedMessages) { %>
          <% if (sentMessage.senderId == user1 && sentMessage.reciverId == UserId) { %>
            <li class="sent">
              <span class="receiver-right"><%= sentMessage.timestamp %>:</span>
              <!-- <hr class="left-hr"> -->
              <span class="sender">Me:</span>
              <span class="message-content">
                <%= sentMessage.message %>
              </span>
            </li>
          <% } else if (sentMessage.senderId == UserId && sentMessage.reciverId == user1) { %>
            <li class="received">
              <span class="receiver"><%= sentMessage.timestamp %>:</span>
              <!-- <hr class="right-hr"> -->
              <span class="sender"><%= user.name %>:</span>
              <span class="message-content">
                <%= sentMessage.message %>
              </span>
            </li>
          <% } %>
        <% } %>
      </ul>
    </div>

    <!-- Message input form -->
    <form action="/users/<%= UserId %>/send-message" method="post" class="message-form">
      <div class="form-group">
        <input class="form-control" id="message" name="message" rows="3" placeholder="Type your message here..."></input>
      </div>
      <button type="submit" class="btn btn-primary">Send</button>
    </form>
  </div>
  <!-- ... WebSocket script ... -->
    <script>
      const ws = new WebSocket({server});

      ws.addEventListener("message", function (event) { 
        const data = JSON.parse(event.data);

        if (data.type  === "message"){
          addMessage(data.data); 
        }
      });

      function sendMessage() {
        const message = document.getElementById("message").value;

        if (!message) return false;

        ws.send(JSON.stringify({ type: "message", data: message }));

        addMessage(message);
        document.getElementById("message").value = "";
      }

      function addMessage(message) {
        const chatBox = document.getElementById("chatBox");
        const li = document.createElement("li");
        li.innerText = message;
        chatBox.appendChild(li);
      }

    </script>
</body>
</html>
